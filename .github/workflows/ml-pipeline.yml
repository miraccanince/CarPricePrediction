name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: CarPricePrediction

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: CarPricePrediction/requirements.txt

    - name: Install dependencies
      run: |
        echo "=== Installing dependencies ==="
        pwd
        ls -la
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "Dependencies installed successfully"

    - name: Run tests
      run: |
        echo "=== Running tests ==="
        pwd
        ls -la tests/
        python -m pytest tests/ -v --tb=short

    - name: Run ML pipeline
      run: |
        echo "=== Running ML pipeline ==="
        pwd
        ls -la
        python main.py

    - name: Check model performance
      run: |
        echo "=== Checking model performance ==="
        pwd
        ls -la reports/
        python - << 'PY'
        import json
        with open('reports/metrics.json', 'r') as f:
            metrics = json.load(f)
        rmse = metrics['rmse']
        r2 = metrics['r2']
        print(f'Model Performance - RMSE: {rmse:.4f}, R²: {r2:.4f}')
        # Fail if performance drops significantly
        assert r2 > 0.8, f'R² too low: {r2}'
        assert rmse < 0.25, f'RMSE too high: {rmse}'
        PY

    - name: Prepare artifacts
      run: |
        echo "=== Preparing artifacts ==="
        pwd
        ls -la models/ reports/

    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: model-artifacts
        path: |
          CarPricePrediction/models/
          CarPricePrediction/reports/
        if-no-files-found: error
        retention-days: 30
